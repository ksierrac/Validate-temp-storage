#!/usr/bin/env python

from Pegasus.DAX3 import *
import sys
import os

# Create a abstract dag
dax = ADAG("pegasus-example")

dax.metadata("name", "Validate Example")
dax.metadata("createdby", "Sierra")

# We have three files: one existing input, one intermediate
# generated at site 1, and one ouput generated at site 2
finput = File("input1.data")
finput.addPFN(PFN("$HOME/StampedeExample/one/1H6.fam", "stampede"))
dax.addFile(finput)

fintermediate = File("intermediate.data")
foutput = File("output.data")

# step 1 (to run on site 1)
job1 = Job(name="phenoconvert")
job1.addArguments("-T", "60", "-i", finput, "-o", fintermediate)
job1.uses(finput, link=Link.INPUT)
job1.uses(fintermediate, link=Link.OUTPUT, transfer=False)
dax.addJob(job1)

# step 2 (to run on site 2)
job2 = Job(name="fastlmm")
job2.addArguments("-T", "60", "-i", fintermediate, "-o", foutput)
job2.uses(fintermediate, link=Link.INPUT)
job2.uses(foutput, link=Link.OUTPUT, transfer=True)
dax.addJob(job2)

# job dependencies
dax.depends(parent=job1, child=job2)

# Write the DAX to stdout
dax.writeXML(sys.stdout)


<?xml version="1.0" encoding="UTF-8"?>
<!-- generated: 2016-06-08 08:01:05.484721 -->
<!-- generated by: ksierrac -->
<!-- generator: python -->
<adag xmlns="http://pegasus.isi.edu/schema/DAX" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://pegasus.isi.edu/schema/DAX http://pegasus.isi.edu/schema/dax-3.6.xsd" version="3.6" name="pegasus-example">
        <metadata key="name">Validate Example</metadata>
        <metadata key="createdby">Sierra</metadata>
        <file name="input1.data">
                <pfn url="$HOME/pegasustest/StampedeExample/one/1H6.fam" site="site"/>
        </file>
        <job id="ID0000001" name="mainstep">
                <argument>-T 60 -i <file name="input1.data"/> -o <file name="output1.data"/></argument>
                <uses name="input1.data" link="input"/>
                <uses name="output1.data" link="output" transfer="true"/>
        </job>
</adag>